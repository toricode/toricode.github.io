<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python Json on Tori Code</title>
    <link>https://toricode.com/tag/python-json/</link>
    <description>Recent content in Python Json on Tori Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Dec 2019 21:23:32 +0700</lastBuildDate>
    
	<atom:link href="https://toricode.com/tag/python-json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python Deserialize JSON String to Object</title>
      <link>https://toricode.com/python-deserialize-json-string-to-object/</link>
      <pubDate>Mon, 23 Dec 2019 21:23:32 +0700</pubDate>
      
      <guid>https://toricode.com/python-deserialize-json-string-to-object/</guid>
      <description>In this tutorial we will learn how to use Python built-in package json to deserialize a JSON string to a Python object.
First step you need to import json package. import json
Declare a JSON string to deserialize, for example: json_data = &amp;#39;{&amp;#34;firstName&amp;#34;: &amp;#34;Larry&amp;#34;, &amp;#34;lastName&amp;#34;:&amp;#34;Scott&amp;#34;, &amp;#34;email&amp;#34;: &amp;#34;larry@toricode.com&amp;#34;}&amp;#39;
Using method json.loads() to deserialize the JSON string. json_object = json.loads(json_data)
To observe the return value of json.loads() method we print the type of return object and its data as below.</description>
    </item>
    
  </channel>
</rss>