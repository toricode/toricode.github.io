<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json on Tori Code</title>
    <link>https://toricode.com/tag/json/</link>
    <description>Recent content in Json on Tori Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Dec 2019 23:20:31 +0700</lastBuildDate>
    
	<atom:link href="https://toricode.com/tag/json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serialize Object to JSON String</title>
      <link>https://toricode.com/python-serialize-object-to-json-string/</link>
      <pubDate>Mon, 23 Dec 2019 23:20:31 +0700</pubDate>
      
      <guid>https://toricode.com/python-serialize-object-to-json-string/</guid>
      <description>In this Python tutorial we will learn how to serialize a Python object into a JSON string and go through different code examples in Python.
First step we need to import json package in source file. import json
To serialize a Python object into JSON string we will use json.dumps() method. Below are list of different example of using json.dumps() method.
Serialize Python dict Object to JSON String user = {&amp;#34;firstName&amp;#34;: &amp;#34;Kathy&amp;#34;, &amp;#34;lastName&amp;#34;: &amp;#34;Wells&amp;#34;}json_user = json.</description>
    </item>
    
    <item>
      <title>Deserialize JSON File to Object</title>
      <link>https://toricode.com/python-deserialize-json-file-to-object/</link>
      <pubDate>Mon, 23 Dec 2019 22:07:41 +0700</pubDate>
      
      <guid>https://toricode.com/python-deserialize-json-file-to-object/</guid>
      <description>In this Python tutorial we will learn how to read JSON file content and deserialize to a Python object.
First step is import json package in your source file. import json
For example you have the JSON file that stored the list of contacts as below located on your computer at &amp;rsquo;D:\ToriCode\Python\contacts.json&amp;rsquo;
[{&amp;#34;firstName&amp;#34;: &amp;#34;Doris&amp;#34;,&amp;#34;lastName&amp;#34;: &amp;#34;Castillo&amp;#34;,&amp;#34;email&amp;#34;: &amp;#34;doris@toricode.com&amp;#34;},{&amp;#34;firstName&amp;#34;: &amp;#34;Jerry&amp;#34;,&amp;#34;lastName&amp;#34;: &amp;#34;Fernandez&amp;#34;,&amp;#34;email&amp;#34;: &amp;#34;jerry@toricode.com&amp;#34;},{&amp;#34;firstName&amp;#34;: &amp;#34;Jessica&amp;#34;,&amp;#34;lastName&amp;#34;: &amp;#34;Schultz&amp;#34;,&amp;#34;email&amp;#34;: &amp;#34;jessica@toricode.</description>
    </item>
    
    <item>
      <title>Deserialize JSON String to Object</title>
      <link>https://toricode.com/python-deserialize-json-string-to-object/</link>
      <pubDate>Mon, 23 Dec 2019 21:23:32 +0700</pubDate>
      
      <guid>https://toricode.com/python-deserialize-json-string-to-object/</guid>
      <description>In this tutorial we will learn how to use Python built-in package json to deserialize a JSON string to a Python object.
First step you need to import json package. import json
Declare a JSON string to deserialize, for example: json_data = &amp;#39;{&amp;#34;firstName&amp;#34;: &amp;#34;Larry&amp;#34;, &amp;#34;lastName&amp;#34;:&amp;#34;Scott&amp;#34;, &amp;#34;email&amp;#34;: &amp;#34;larry@toricode.com&amp;#34;}&amp;#39;
Using method json.loads() to deserialize the JSON string. json_object = json.loads(json_data)
To observe the return value of json.loads() method we print the type of return object and its data as below.</description>
    </item>
    
  </channel>
</rss>